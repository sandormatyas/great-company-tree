openapi: 3.0.3

info:
  title: CompanyHierarchyAPI
  version: "1.0"
  description: "API for managing the company hierarchy"
  contact:
    name: Matyas Sandor
    email: matyas.sandor@lego.com
    url: https://www.github.com/sandormatyas
  license:
    name: MIT

servers:
  - url: "http://localhost:3000"

paths:
  /v1/company_unit/{company_unit_id}:
    parameters:
      - name: company_unit_id
        in: path
        required: true
        schema:
          type: string
        description: The ID of the company unit
    get:
      summary: Gets a company unit by ID
      description: Returns a company unit.
      operationId: get-company-unit
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyUnit"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      summary: Updates a company unit
      description: Updates a company unit specified by its ID.
      operationId: patch-company-unit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyUnitUpdatePayload"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyUnit"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"

components:
  schemas:
    CompanyUnit:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the company unit
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: The name of the company unit
          example: "Root"
        parent_id:
          type: string
          format: uuid
          description: The ID of the parent company unit
          example: 123e4567-e89b-12d3-a456-426614174000
        root_id:
          type: string
          format: uuid
          description: The ID of the root company unit
          example: 123e4567-e89b-12d3-a456-426614174000
        height:
          type: integer
          format: int32
          description: The height of the company unit in the hierarchy
          example: 0
        children:
          type: array
          items:
            $ref: "#/components/schemas/CompanyUnit"
          description: The children of the company unit
          example: []
    CompanyUnitUpdatePayload:
      type: object
      properties:
        parent_id:
          type: string
          format: uuid
          description: The ID of the parent company unit
          example: 123e4567-e89b-12d3-a456-426614174000
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri-reference
          description: >
            A URI reference that uniquely identifies the problem type only in the
            context of the provided API. Opposed to the specification in RFC-7807,
            it is neither recommended to be dereferencable and point to a
            human-readable documentation nor globally unique for the problem type.
          default: "about:blank"
          example: "/problem/connection-error"
        title:
          type: string
          description: >
            A short summary of the problem type. Written in English and readable
            for engineers, usually not suited for non technical stakeholders and
            not localized.
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurrence of the
            problem that is helpful to locate the problem and give advice on how
            to proceed. Written in English and readable for engineers, usually not
            suited for non technical stakeholders and not localized.
          example: Connection to database timed out

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: company
    description: Operations related to the company and its hierarchy

externalDocs:
  url: https://github.com/sandormatyas/yggdrasil
